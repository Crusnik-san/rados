--------------------------------------------------------------------------------

Library:      RadOs
Author:       Radoslaw Biernacki <radoslaw.biernacki@gmail.com>
License:      BSD Revised

--------------------------------------------------------------------------------

Todo list.

Following list represent the issues which need to be fixed or improved. 
If you are interested for involvement into project, this is good starting point.
Each task should be described with complexity level, which would should be the
estimation of required programing experience.

Format:
(architecture or OS module) COMPLEXITY - description

Performance:
- (various places) MEDIUM - minimize the length of the critical sections (IRQ
                            disabled). Instead use the scheduler lock instead
                            (if possible). At least some slicing could be done
                            in some places to minimize the timespan in which the
                            interrupts are kept disabled.
- (AVR)            HIGH   - improve the ISR entry and leave code and
                            arch_context_switch() so not all register would need
                            to be stored on ISR entry. Use the CallSaved and
                            CallUsed ABI sets for that purpose.
                            (https://gcc.gnu.org/wiki/avr-gcc)
- (AVR and MSP430) LOW    - Use Harley's or Goryavsky algorithm for
                            arch_bitmask_fls() for platforms without HW CLZ
                            operation
- (all platforms) MEDIUM  - Calculation of: - cycles of each OS functions
                                            - maximal cycles count of critical sections
                                            - cycles for task enqueue (make_ready) 
                                              and top prio task dequeue
- (generic code) Low      - Optimize code inside timer module, instead of incrementing 
                            and comparing tick_unsynch to first timer we should 
                            copy it from first timer, decrement each tick and
                            compare to 0 (more efficient for most arch) 

Features:
- (msg_queues)     MEDIUM - lock less message queues in form of library similar
                            to work done on wip_message_box branch
- (scheduler)      LOW    - more modular os_start(). There should be two
                            functions; os_init() and os_start(), in best without
                            callback parameters. Hooks (like idle hook) should
                            be implemented in some other way.
- (MSP430 & AVR)   MEDIUM - CPU sleep states for arch_idle(), best in MCU
                            agnostic way
- (scheduler)      HIGH   - Proto-threads (task's that share the same stack)

Mics:
- (various places) LOW    - Code style checking tool integration into makefile
                            (indent, clang-format, uncrustify)
                            indent -linux -nut -i3
- (various places) LOW    - Remove code redundancy
- (various places) LOW    - move OS_LIKELY/OS_UNLIKELY to os_private.h
- (various places) LOW    - move test_assert() to generic ???
- (various places) LOW    - Integration with C++ (extern "C" {} etc.)
- (various places) LOW    - C++ wrapers for OS API (classes for OS primitives)

New platforms:
- ARM Cortex M0 and M3


--------------------------------------------------------------------------------
